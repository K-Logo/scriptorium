import React, { useState, useEffect } from "react";
import Head from "next/head";
import { useRouter } from 'next/router';
import Navbar from "../components/Navbar";
import Link from 'next/link';

export default function CodeTemplates() {
  const [dropdownOpen, setDropdownOpen] = useState(false);
  const [codeTemplates, setCodeTemplates] = useState([]);
  const [currentPage, setCurrentPage] = useState(1);
  const [user, setUser] = useState(null);
  const router = useRouter();
  const typeToDisplayName = {
      "title": "Title",
      "content": "Content",
      "tag": "Tag"
  };

  useEffect(() => {
    handleSubmit();
  }, [currentPage]) ;

  // Function generated by ChatGPT
  const goBack = () => {
    if (currentPage > 1) {
      setCurrentPage(currentPage - 1);
    }
  };

  // Function generated by ChatGPT
  const goNext = () => {
    setCurrentPage(currentPage + 1);
  };

  async function handleSubmit() {
    const userJson = window.localStorage.getItem('user');
    const user = JSON.parse(userJson);
    if (!user || !user.jwtToken) {
        router.push("/login");
    } else {
        setUser(user);
        const params: string = `?epp=20&pno=${currentPage}&type=code-templates`;

        const response = await fetch(`http://localhost:3000/api/users/${user.id}${params}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            }
        });
        const json = await response.json();
        console.log(json);
        if (response.ok) {
            setCodeTemplates(json.codeTemplates);
        } else {
            alert(json.error);
        }
    }
    
  }


  return (
    <>
      <Head>
        <title>Scriptorium Code Templates</title>
      </Head>
      <main>
        <div id="code-templates-container">
          <div id="middle-column">
            <h1>
                Code templates
            </h1>
            <br/>
            <div id="code-templates-results">
              <div id="code-templates-grid">
                {codeTemplates.map((item) => (
                  <Link key={item.id} className="code-template-item" href={`/code-templates/${item.id}`}>
                    <h3>{item.title}</h3>
                    <p>{item.explanation}</p>
                    <div className="tag-container">
                      {item.tags.map((tag: any) => (
                        <div className="tag">{tag.name}</div>
                      ))}
                    </div>
                    
                  </Link>
                ))}
              </div>
              
            </div>
            <div className="pagination-controls"> {/* div generated by ChatGPT */}
              <button className="blue-button" onClick={goBack} disabled={currentPage === 1}>
                {"< "}Back
              </button>
              <span>Page {currentPage}</span>
              <button className="blue-button" onClick={goNext}>
                Next{" >"}
              </button>
            </div>
          </div>
          
        </div>
        
        
      </main>
      
      
    </>
  );
}

